{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    /* npm start frontend */
    /* runs 'npm run start' which starts the server and runs ngServe */
    {
      "label": "npm start frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "start"
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "Compiled | Failed to compile."
          }
        }
      }
    },
    /* npm test frontend */
    /* runs 'npm run test' which runs ngTest */
    {
      "label": "npm test frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "test"
      ],
      "isBackground": true,
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            /* it knows ngTest is complete when it sees 'TOTAL ...' in the terminal */
            "regexp": "TOTAL:"
          }
        }
      }
    },
    /* npm start backend index.js */
    /* runs 'npm run start'in /backend which starts backend server */
    {
      "label": "npm start backend index.js",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/backend",
        "start"
      ],
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    },
    {
      "label": "npm backend server-side watch",
      "type": "npm",
      "script": "tscServerWatch",
      "path": "backend/",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      }
    },
    {
      "label": "npm backend client-side watch",
      "type": "npm",
      "script": "tscClientWatch",
      "path": "backend/",
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "dedicated"
      }
    },
    /* npm build backend */
    {
      "label": "npm build backend",
      "type": "npm",
      "script": "build",
      "path": "backend/",
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      }
    },
    /* npm build:dev frontend */
    {
      "label": "npm build:dev frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "build:dev"
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": "build",
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "Compiled |Failed to compile."
          }
        }
      }
    },
    /* npm build:e2e frontend */
    {
      "label": "npm build:e2e frontend",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "build:e2e"
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": "build",
      "problemMatcher": {
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": [
          "relative",
          "${cwd}"
        ],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "Compiled |Failed to compile."
          }
        }
      }
    },
    /* npm resetDatabase */
    {
      "label": "npm resetDatabase",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/frontend",
        "resetDatabase"
      ],
      "isBackground": true,
      "presentation": {
        "focus": true,
        "panel": "dedicated"
      },
      "group": "build",
      "problemMatcher": []
    },
    /* Taskkill node.exe */
    {
      "label": "Taskkill node.exe",
      "type": "shell",
      "windows": {
        "command": "${workspaceFolder}/backend/utils/utils-build/taskkillNode.bat"
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    /* Is Server Up? */
    {
      "label": "Is Server Up?",
      "type": "process",
      "command": "node",
      "args": [
        "${workspaceFolder}/backend/dist/utils/utils-build/isServerUp.js"
      ],
      "options": {
        "env": {
          "NODE_ENV": "development",
          "DEBUG": "PP*",
          "DEBUG_COLORS": "true"
        }
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    /* Start Server*/
    {
      "label": "Start Server",
      "type": "process",
      "command": "node",
      "args": [
        "${workspaceFolder}/backend/dist/utils/utils-build/startServer.js"
      ],
      "isBackground": true,
      "options": {
        "env": {
          "NODE_ENV": "development",
          "DEBUG": "PP*",
          "DEBUG_COLORS": "true"
        }
      },
      "group": "test",
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": [
        {
          "pattern": [
            {
              "regexp": ".",
              "file": 1,
              "location": 2,
              "message": 3
            }
          ],
          "background": {
            "activeOnStart": true,
            "beginsPattern": {
              "regexp": "(.*?)"
            },
            "endsPattern": "Connected to"
          }
        }
      ]
    },
    /* npm delete nyc file */
    {
      "label": "npm delete nyc file",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "--prefix",
        "${workspaceRoot}/backend",
        "delNyc"
      ],
      "presentation": {
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "group": "build",
      "problemMatcher": []
    },
  ]
}
